---
import Layout from "../../components/tailwindui/Layout.astro";
import SimpleLayout from "../../components/tailwindui/SimpleLayout.astro";
import SpeakingAppearance from "../../components/tailwindui/Speakings/SpeakingAppearance.astro";
import SpeakingSection from "../../components/tailwindui/Speakings/SpeakingSection.astro";
import { MicroCMSAPI } from '../../libs/microCMS/apis';
import { createCFMicroCMSClient } from '../../libs/microCMS/cloudflare';
import { sortByEventDate } from "../../libs/microCMS/utils";

const {
    lang = 'en'
} = Astro.props

const microCMS = new MicroCMSAPI(createCFMicroCMSClient(Astro))
const endedEvents = sortByEventDate(await microCMS.listEndedEvents())
const upcomingEvents = sortByEventDate(await microCMS.listUpcomingEvents())

const title = /ja/.test(lang) ? '最近の登壇情報' : 'Revent speaking'
---
<Layout title={title}>
    <SimpleLayout
        title={title}
        intro=""
    >
        <div class="space-y-20">
            <SpeakingSection title="Upcoming">
                {upcomingEvents.map(event => {
                    return (
                        <SpeakingAppearance
                            href={event.url}
                            title={event.session_title ?? event.title}
                            description={event.description}
                            event={event.session_title ? event.title : undefined}
                            cta={"Register"}
                        />
                    )
                })}
            </SpeakingSection>
            <SpeakingSection title="Past">
                {endedEvents.map(event => {
                    const url = event.blog_url ?? event.slide_url ?? event.url
                    const ctaText = (() => {
                        if (event.blog_url) return 'Read blog'
                        if (event.slide_url) return 'View Slide'
                        return "Visit event page"
                    })()
                    return (
                        <SpeakingAppearance
                            href={url}
                            title={event.session_title ?? event.title}
                            description={event.description}
                            event={event.session_title ? event.title : undefined}
                            cta={ctaText}
                        />
                    )
                })}
            </SpeakingSection>
        </div>
    </SimpleLayout>
</Layout>